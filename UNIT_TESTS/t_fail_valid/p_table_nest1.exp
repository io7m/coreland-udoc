[0] pass: main: 12: argc == 2
[1] pass: main: 13: ud_error_init(&ud_errors) == 1
[2] pass: main: 14: ud_init(&doc) == 1
[3] pass: main: 15: ud_open(&doc, argv[1]) == 1
debug: ud_tree_build: processing p_table_nest1.t depth 0
debug: ud_tree_build: symbol: table
debug: ud_tree_build: paren open
debug: ud_tree_build: processing p_table_nest1.t depth 1
debug: ud_tree_build: symbol: t-row
debug: ud_tree_build: paren open
debug: ud_tree_build: processing p_table_nest1.t depth 2
debug: ud_tree_build: symbol: table
debug: ud_tree_build: paren open
debug: ud_tree_build: processing p_table_nest1.t depth 3
debug: ud_tree_build: symbol: t-row
debug: ud_tree_build: string: item
debug: ud_tree_build: paren close
debug: ud_tree_build: success depth 3
debug: ud_tree_build: paren close
debug: ud_tree_build: success depth 2
debug: ud_tree_build: paren close
debug: ud_tree_build: success depth 1
debug: ud_tree_build: eof
debug: ud_tree_build: success depth 0
[4] pass: main: 16: ud_parse(&doc) == 1
debug: ud_walk: processing p_table_nest1.t depth 0
debug: ud_walk: symbol: table
debug: ud_walk: list
debug: ud_walk: processing p_table_nest1.t depth 1
debug: ud_walk: symbol: t-row
debug: ud_walk: list
debug: ud_walk: processing p_table_nest1.t depth 2
debug: ud_walk: symbol: table
error: 4: table: cannot be child of table
debug: ud_walk: fail depth 2
error: 4: table: cannot be child of table
debug: ud_walk: fail depth 1
error: 4: table: cannot be child of table
debug: ud_walk: fail depth 0
[5] pass: main: 17: ud_validate(&doc) == 0
[6] pass: main: 18: ud_free(&doc) == 1
